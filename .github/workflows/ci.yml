name: CI


# by not building all branches on push, we avoid the duplicated builds in PRs
on:
  push:
    branches:
      - main
      - fix_gitlab_pages # for testing
    tags:
      - '**'
  pull_request:


env:
  NUMBA_NUM_THREADS: 1
  MPLBACKEND: Agg
  PYTEST_ADDOPTS: --color=yes


jobs:
  static-code-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files

  tests:
    strategy:
      matrix:
        include:
          # linux builds
          - python-version: "3.10"
            os: ubuntu-latest

          - python-version: "3.11"
            os: ubuntu-latest
            extra-args: ['codecov']

          - python-version: "3.12"
            os: ubuntu-latest

          - python-version: "3.13"
            os: ubuntu-latest

          # macos builds
          - python-version: "3.12"
            os: macos-latest

          - python-version: "3.13"
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: |
          python -m pip install --upgrade pip

      - name: Build the package
        run: |
          pip install build
          python -m build

      - name: Install the package
        run: pip install .[test]

      - name: Install the package in editable mode
        run: pip install --editable .[test]

      - name: Test with pytest
        run: |
          pytest --cov --cov-report=xml --cov-branch \
            --doctest-modules \
            --ignore-glob="*/_dev_version" \
            -v

      - uses: codecov/codecov-action@v3
        if: contains(matrix.extra-args, 'codecov')

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install doc dependencies
        run: |
          pip install -e .[doc]
          git describe --tags
          python -c 'import ctapipe_io_hess; print(ctapipe_io_hess.__version__)'

      - name: Build docs
        run: cd docs && make html SPHINXOPTS="-W --keep-going -n --color -j auto"

      - name: Upload docs artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
